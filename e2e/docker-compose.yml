version: "3.9"
services:
  blockchain:
    build: ../../bholdus-chain
    command: bash -c "/usr/local/bin/bholdus --dev --ws-external"
    ports:
      - 9944:9944

  scan:
    build: ../packages/scan
    env_file: ../packages/scan/.env
    volumes:
      - ../packages/scan:/app
    depends_on:
      - mongodb
      - blockchain

  price:
    build: ../packages/price
    volumes:
      - ../packages/price:/app
  explorer:
    build: ../packages/next
    volumes:
      - ../packages/next:/app
    ports:
      - 6001:6001
    depends_on:
      - scan
  mongodb:
    build: ./mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME:
      MONGO_INITDB_ROOT_PASSWORD:
      MONGO_INITDB_DATABASE: statescan-statemine
      MONGO_REPLICA_SET_NAME: "mongo-replica-0"
    volumes:
      # - ../docker-data/mongodb/mongod.conf:/etc/mongod.conf
      # - ../docker-data/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ../docker-data/mongodb/db:/data/db
      - ../docker-data/mongodb/log:/var/log/mongodb
    ports:
      - 27017:27017
    # healthcheck:
    #   test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
    #   interval: 10s
    #   start_period: 30s
    # command: [ "/usr/bin/mongod --bind_ip_all --replSet rs0 && mongo && rs.initiate( { _id : \"rs0\", members: [{ _id: 0, host: \"mongodb:27017\" }]})" ]
    # command: ["-f", "/etc/mongod.conf", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]

  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://mongodb:27017"
    ports:
      - 8081:8081
